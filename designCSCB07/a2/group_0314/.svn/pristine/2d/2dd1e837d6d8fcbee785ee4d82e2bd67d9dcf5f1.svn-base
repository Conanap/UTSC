import java.lang.Integer;

public class RunHistory implements Command {
	private Directory curr;
	private FileSystem fs;
	private History his;
	private CommandRunner cmd;
	private Output output;

	private void runHis(String tokens) {
		Integer num;
		num = getNum(tokens);
		if(num != null && (int)num > 0) {
			String rcmd = history.getHistory((int)num, (int)num);
			rcmd = rcmd.substring(3, rcmd.length() - 1);
			if(!rcmd.substring(rcmd.length() - 4, rcmd.length()).equals("null")) {
				String cmds[] = Tokenizer.tokenizeInput(rcmd);
				cmd.execute(cmds, this.curr, this.fs, this.history, this.output);
			} else
				output.sendErrBuffer("Command number " + num + " does not exist\n");
		} else
			output.sendErrBuffer("Cannot take negative number\n");
	}

	public void execute(String[] tokens, CommandRunner cmd, Output output) {
		this.cmd = cmd;
		this.output = output;
		this.runHis(tokens[0]);
	}

	public void initialize(Directory curr, FileSystem fs, History his) {
		this.curr = curr;
		this. fs = fs;
		this. his = his;
	}

	public boolean isValid(String[] tokens) {
		return true;
	}

	public getManual() {
		return "";
	}

	public getUsage() {
		return "";
	}

	private Integer getNum(String cmd) {
		cmd = cmd.substring(1, 2);
		try {
			return Integer.parseInt(cmd);
		} catch(NumberFormatException e) {
			Output.sendErrBuffer("Invalid number\n");
			return null;
		}
	}
}